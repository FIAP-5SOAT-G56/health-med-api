name: Continuous Integration
on:
  workflow_dispatch:

  pull_request:
    branches: ["main", "develop"]

env:
  NODE_VERSION: 20.x

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: |
        npm ci

    - name: Build
      run: |
        npm run build

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: |
        npm ci

    - name: Lint
      run: |
        npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [lint, build]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: |
        npm ci

    - name: Unit Tests
      run: |
        npm run test:unit

  horusec:
    name: Horusec Security
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download and Install Horusec
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest

    - name: Run Analysis
      id: horusec_analysis
      continue-on-error: true
      run: |
        /usr/local/bin/horusec start -p="./" -e="true" -D="true" -o="json" -O="./horusec-report.json"

    - name: Comment on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fileName = './horusec-report.json'

          const fs = require('fs');
          const report = fs.readFileSync(fileName, 'utf8');

          const { id: reportId, analysisVulnerabilities: vulnerabilities } = JSON.parse(report);
          const title = `## Horusec Security Report\n\nID: ${reportId}`;

          const prComment = vulnerabilities.reduce((acc, { vulnerabilities }) => {
            const { vulnerabilityID, severity, confidence, file, line, column, code, details } = vulnerabilities;

            return `${acc}\n\n### **Vulnerability ID**: ${vulnerabilityID}\n- **Severity**: ${severity}\n- **Confidence**: ${confidence}\n- **File**: ${file} (line: ${line}, column: ${column})\n- **Code**: ${code}\n- **Details**: ${details}`;
          }, title);

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: prComment
          });

    - name: Finish
      if: steps.horusec_analysis.outcome == 'failure'
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed('Horusec analysis failed');